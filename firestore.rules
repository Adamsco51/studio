
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Allow user to create their own profile (typically on signup)
      allow create: if request.auth.uid == userId;
      // Allow user to read their own profile, or an admin to read any profile
      allow read: if request.auth.uid == userId || 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow user to update their own profile, or an admin to update any profile
      allow update: if request.auth.uid == userId ||
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Prevent deletion by default, adjust as needed (e.g., admin can delete)
      allow delete: if false; 
    }

    // Clients Collection
    match /clients/{clientId} {
      allow read, write: if request.auth != null;
    }

    // Bills of Lading Collection
    match /billsOfLading/{blId} {
      allow read, write: if request.auth != null;
    }

    // Expenses Collection
    match /expenses/{expenseId} {
      allow read, write: if request.auth != null;
    }
    
    // WorkTypes Collection
    match /workTypes/{workTypeId} {
       allow read, write: if request.auth != null;
    }
    
    // ApprovalRequests Collection
    match /approvalRequests/{requestId} {
      // Authenticated user can create a request if their UID matches requestedByUserId
      allow create: if request.auth.uid == request.resource.data.requestedByUserId;
      
      // Admins can read and update requests. Users can read their own requests.
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                    (resource.data.requestedByUserId == request.auth.uid);
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Deletion of requests might be restricted to admins or disallowed
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // ChatMessages Collection
    match /chatMessages/{messageId} {
      allow read: if request.auth != null; 
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid; 
    }

    // TodoItems Collection
    match /todoItems/{todoId} {
      allow read: if request.auth != null; 
      allow create: if request.auth != null && request.resource.data.createdByUserId == request.auth.uid; 
      allow update: if request.auth != null && 
                      (request.resource.data.createdByUserId == request.auth.uid || 
                       request.resource.data.assignedToUserId == request.auth.uid ||
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null &&
                      (request.resource.data.createdByUserId == request.auth.uid ||
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Company Settings Document
    match /companySettings/main {
      allow read: if request.auth != null; 
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Audit Log for Sessions
    match /auditLogSessions/{eventId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update, delete: if false;
    }
  }
}
