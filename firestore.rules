
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isOwner(docUserId) {
      return isSignedIn() && request.auth.uid == docUserId;
    }
    function isEmployee() {
      // This function might not be strictly necessary if isSignedIn() and !isAdmin() covers it
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }
    function isJobTitle(jobTitles) {
      let userJobTitle = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.jobTitle;
      if (jobTitles is list) {
        return isSignedIn() && userJobTitle in jobTitles;
      }
      return isSignedIn() && userJobTitle == jobTitles;
    }

    // Helper to check if only specific keys are being changed
    function AffectsOnly(keys) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(keys);
    }
    // Helper to check if at least one of the keys is affected (useful for combined updates)
    function Affects(keys) {
      return request.resource.data.diff(resource.data).affectedKeys().hasAny(keys);
    }


    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isAdmin() || isOwner(userId));
      allow delete: if isAdmin();
    }

    match /clients/{clientId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
                        isAdmin() ||
                        isOwner(resource.data.createdByUserId) ||
                        AffectsOnly(['blIds']) // Allow update to blIds by any signed-in user
                      );
      allow delete: if isSignedIn() && isAdmin(); // Deletion through approval flow is a function call
    }

    match /billsOfLading/{blId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
                        isAdmin() ||
                        isOwner(resource.data.createdByUserId) ||
                        AffectsOnly(['containerIds']) // Allow update to containerIds by any signed-in user
                      );
      allow delete: if isSignedIn() && isAdmin();
    }

    match /expenses/{expenseId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isAdmin() || isOwner(resource.data.employeeId));
      allow delete: if isSignedIn() && isAdmin();
    }

    match /workTypes/{workTypeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isAdmin() || isOwner(resource.data.createdByUserId));
      allow delete: if isSignedIn() && isAdmin();
    }

    match /containers/{containerId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isAdmin() || isOwner(resource.data.createdByUserId));
      allow delete: if isSignedIn() && isAdmin();
    }

    match /trucks/{truckId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
                        isAdmin() ||
                        isOwner(resource.data.createdByUserId) ||
                        ( // Allow system-like updates for assignments/status changes
                          AffectsOnly(['status', 'currentDriverId', 'currentDriverName']) ||
                          AffectsOnly(['status']) || // Only status
                          AffectsOnly(['currentDriverId', 'currentDriverName']) // Only assignment
                        )
                      );
      allow delete: if isSignedIn() && isAdmin();
    }

    match /drivers/{driverId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
                        isAdmin() ||
                        isOwner(resource.data.createdByUserId) ||
                        ( // Allow system-like updates for assignments/status changes
                          AffectsOnly(['status', 'currentTruckId', 'currentTruckReg']) ||
                          AffectsOnly(['status']) || // Only status
                          AffectsOnly(['currentTruckId', 'currentTruckReg']) // Only assignment
                        )
                      );
      allow delete: if isSignedIn() && isAdmin();
    }

    match /transports/{transportId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isAdmin() || isOwner(resource.data.createdByUserId));
      allow delete: if isSignedIn() && isAdmin();
    }

    match /approvalRequests/{requestId} {
      allow read: if isSignedIn(); // Code should filter further if needed (e.g. user can only see their own)
      allow create: if isSignedIn();
      allow update: if isAdmin(); // Only admins process requests
      allow delete: if isAdmin();
    }

    match /chatMessages/{messageId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isAdmin() || isOwner(resource.data.senderId);
        allow delete: if isAdmin() || isOwner(resource.data.senderId);
    }

    match /todoItems/{todoId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn(); // Any signed-in user can update (e.g. mark complete)
        allow delete: if isSignedIn() && (isAdmin() || isOwner(resource.data.createdByUserId));
    }

    match /auditLogSessions/{logId} {
        allow read: if isAdmin();
        allow create: if true; // System/backend can write this
        allow update: if false;
        allow delete: if false;
    }

    match /companySettings/{settingId} {
      allow read: if isSignedIn();
      allow list: if isSignedIn(); // Required for getCompanyProfileFromFirestore if it ever tries to list
      allow create, update, delete: if isAdmin();
    }

    match /secretaryDocuments/{documentId} {
      allow read: if isSignedIn() && (isAdmin() || isJobTitle(['Secrétaire', 'Manager']));
      allow create: if isSignedIn() && (isAdmin() || isJobTitle(['Secrétaire', 'Manager']));
      allow update: if isSignedIn() && (isAdmin() || (isJobTitle(['Secrétaire', 'Manager']) && isOwner(resource.data.createdByUserId)));
      allow delete: if isSignedIn() && (isAdmin() || (isJobTitle(['Secrétaire', 'Manager']) && isOwner(resource.data.createdByUserId)));
    }

    match /accountingEntries/{entryId} {
      allow read: if isSignedIn() && (isAdmin() || isJobTitle(['Comptable', 'Manager']));
      allow create: if isSignedIn() && (isAdmin() || isJobTitle(['Comptable', 'Manager']));
      allow update: if isSignedIn() && (isAdmin() || (isJobTitle(['Comptable', 'Manager']) && isOwner(resource.data.createdByUserId)));
      allow delete: if isSignedIn() && (isAdmin() || (isJobTitle(['Comptable', 'Manager']) && isOwner(resource.data.createdByUserId)));
    }
  }
}
